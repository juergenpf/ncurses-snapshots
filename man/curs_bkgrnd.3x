.\"***************************************************************************
.\" Copyright 2018-2023,2024 Thomas E. Dickey                                *
.\" Copyright 2002-2015,2017 Free Software Foundation, Inc.                  *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_bkgrnd.3x,v 1.49 2024/12/28 21:26:21 tom Exp $
.TH curs_bkgrnd 3X 2024-12-28 "ncurses @NCURSES_MAJOR@.@NCURSES_MINOR@" "Library calls"
.ie \n(.g \{\
.ds `` \(lq
.ds '' \(rq
.\}
.el \{\
.ie t .ds `` ``
.el   .ds `` ""
.ie t .ds '' ''
.el   .ds '' ""
.\}
.
.de bP
.ie n  .IP \(bu 4
.el    .IP \(bu 2
..
.SH NAME
\fB\%bkgrnd\fP,
\fB\%wbkgrnd\fP,
\fB\%bkgrndset\fP,
\fB\%wbkgrndset\fP,
\fB\%getbkgrnd\fP,
\fB\%wgetbkgrnd\fP \-
manipulate background of a \fIcurses\fP window of wide characters
.SH SYNOPSIS
.nf
\fB#include <curses.h>
.PP
\fBint bkgrnd(const cchar_t *\fIwch\fP);
\fBint wbkgrnd(WINDOW *\fIwin\fP, const cchar_t *\fIwch\fP);
.PP
\fBvoid bkgrndset(const cchar_t *\fIwch\fP);
\fBvoid wbkgrndset(WINDOW *\fIwin\fP, const cchar_t *\fIwch\fP);
.PP
\fBint getbkgrnd(cchar_t *\fIwch\fP);
\fBint wgetbkgrnd(WINDOW *\fIwin\fP, cchar_t *\fIwch\fP);
.fi
.SH DESCRIPTION
Every
.I curses
window has a background property.
In the library's wide configuration,
this property is a
.I \%cchar_t
which combines a set of attributes with the
.I "background character"
(see \fB\%curs_attr\fP(3X)).
The background character is a spacing character.
.PP
When erasing parts of the screen,
.I curses
fills the cells with the background character.
.I curses
also uses the window background when writing characters to the screen.
.bP
The attribute part of the background combines with all
non-blank characters written into the window,
as with the \fB\%wadd_wch\fP(3X) and \fB\%wins_wch\fP(3X) families of
functions.
.bP
Both the character and attribute parts of the background combine with
blank characters that are written into the window.
.PP
The background becomes a property of the character and moves with it
through any scrolling and insert/delete line/character operations.
.PP
To the extent possible on a given terminal,
.I curses
displays the attributes of the background
as the graphic rendition of the character put on the screen.
.SS "bkgrnd, wbkgrnd"
.B \%bkgrnd
and
.B \%wbkgrnd
set the background property of
.B \%stdscr
or the specified window and then apply this setting to
every character cell in that window.
.bP
The rendition of every character in the window changes to the new
background rendition.
.bP
Wherever the former background character appears,
it changes to the new background character.
.PP
.I \%ncurses
updates the rendition of each character cell by comparing the character,
non-color attributes,
and color pair selection.
The library applies to following procedure to each cell in the window,
whether or not it is blank.
.bP
.I \%ncurses
first compares the cell's character to the previously specified
background character;
if they match,
.I \%ncurses
writes the new background character to the cell.
.bP
.I \%ncurses
then checks if the cell uses color;
that is,
its color pair value is nonzero.
If not,
it simply replaces the attributes and color pair in the cell with those
from the new background character.
.bP
If the cell uses color,
and its background color matches that of the current window background,
.I \%ncurses
removes attributes that may have come from the current background and
adds those from the new background.
It finishes by setting the cell's background to use the new window
background color.
.bP
If the cell uses color,
and its background color does not match that of the current window
background,
.I \%ncurses
updates only the non-color attributes,
first removing those that may have come from the current background,
and then adding attributes from the new background.
.PP
If the new background's character is nonspacing,
.I \%ncurses
reuses the old background character,
except for one special case:
.I \%ncurses
treats a background character value of zero (0) as a space.
.PP
If the terminal does not support color,
or if color has not been initialized with \fB\%start_color\fP(3X),
.I \%ncurses
ignores the new background character's color attribute.
.SS "bkgrndset, wbkgrndset"
.B \%bkgrndset
and
.B \%wbkgrndset
manipulate the background of the applicable window,
without updating the character cells as
.B \%bkgrnd
and
.B \%wbkgrnd
do;
only future writes reflect the updated background.
.SS "getbkgrnd, wgetbkgrnd"
.B \%getbkgrnd
and
.B \%wgetbkgrnd
respectively obtain
.BR \%stdscr 's
or the given window's background character,
attributes,
and color pair,
and store it in their
.I wch
argument.
.SH RETURN VALUE
.B \%bkgrndset
and
.B \%wbkgrndset
do not return a value.
.PP
The other functions return
.B ERR
upon failure and
.B OK
upon success.
In
.IR \%ncurses ","
failure occurs if
.bP
.I win
is
.IR NULL ","
or
.bP
.I wch
is
.IR NULL "."
.SH NOTES
.BR \%bkgrnd ","
.BR \%bkgrndset ","
and
.B \%getbkgrnd
may be implemented as macros.
.PP
Unlike their counterparts in the non-wide configuration of
.IR \%ncurses ","
.B \%getbkgrnd
and
.B \%wgetbkgrnd
supply the background character
and attribute in a modifiable
.I \%cchar_t
parameter,
not as the return value.
.SH PORTABILITY
X/Open Curses,
Issue 4 describes these functions.
It specifies no error conditions for them.
.PP
X/Open Curses does not provide details of how the rendition is updated.
.I \%ncurses
follows the approach used in SVr4
.IR curses 's
non-wide functions for manipulating the window background.
.SH HISTORY
These functions were initially specified by X/Open Curses,
Issue 4.
.SH SEE ALSO
\fB\%curs_bkgd\fP(3X) describes the corresponding functions in the
non-wide configuration of
.IR \%ncurses "."
.PP
\fB\%curses\fP(3X),
\fB\%curs_add_wch\fP(3X),
\fB\%curs_attr\fP(3X)
